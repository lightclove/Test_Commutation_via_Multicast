package ru.nppame.utility;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JOptionPane;

public class PropertiesLoader {
  private boolean corecTProperties;
  
  private int port;
  
  private int timeOut;
  
  private String ip1Bind;
  
  private String ip2Bind;
  
  private String group1;
  
  private String group2;
  
  private String BSKPip;
  
  private String messageToBaud;
  
  private int howMuchmessagesToBaud;
  
  public boolean isCorecTProperties() {
    return this.corecTProperties;
  }
  
  public int getPort() {
    return this.port;
  }
  
  public int getTimeOut() {
    return this.timeOut;
  }
  
  public String getIp1Bind() {
    return this.ip1Bind;
  }
  
  public String getIp2Bind() {
    return this.ip2Bind;
  }
  
  public String getGroup1() {
    return this.group1;
  }
  
  public String getGroup2() {
    return this.group2;
  }
  
  public String getBSKPip() {
    return this.BSKPip;
  }
  
  public String getMessageToBaud() {
    return this.messageToBaud;
  }
  
  public int getHowMuchmessagesToBaud() {
    return this.howMuchmessagesToBaud;
  }
  
  public PropertiesLoader(String nameFileProperties) {
    this.corecTProperties = false;
    Properties properties = new Properties();
    FileInputStream fileInputStream = null;
    try {
      fileInputStream = new FileInputStream(new File(nameFileProperties));
    } catch (FileNotFoundException e) {
      JOptionPane.showMessageDialog(null, e.getClass().getName() + " :\n" + e.getMessage(), " " + nameFileProperties, 0);
    } 
    try {
      properties.load(fileInputStream);
      fileInputStream.close();
    } catch (IOException e) {
      JOptionPane.showMessageDialog(null, e.getClass().getName() + " :\n" + e.getMessage(), "" + nameFileProperties, 0);
    } 
    try {
      this.port = Integer.parseInt(properties.getProperty("port"));
      this.timeOut = Integer.parseInt(properties.getProperty("timeOut"));
      this.ip1Bind = properties.getProperty("host.ip.main");
      this.ip2Bind = properties.getProperty("host.ip.standby");
      this.group1 = properties.getProperty("group1");
      this.group2 = properties.getProperty("group2");
      this.BSKPip = properties.getProperty("BSKPip");
      this.messageToBaud = properties.getProperty("messageToBaud");
      this.howMuchmessagesToBaud = Integer.parseInt(properties.getProperty("howMuchmessagesToBaud"));
      this.corecTProperties = NetworkUtil.checkIP(this.ip1Bind) & NetworkUtil.checkIP(this.ip2Bind);
      if (!this.corecTProperties)
        JOptionPane.showMessageDialog(null, "ip , "error ip host" + nameFileProperties, 0); 
      printProperties();
    } catch (Exception e) {
      JOptionPane.showMessageDialog(null, ", "Incorrect properties in file " + nameFileProperties, 0);
    } 
  }
  
  private void printProperties() {}
}
